package kaszino;
import java.util.Random;

abstract public class Asztal 
{
	/** Asztalnál ülő játékosok */
	protected Jatekos[] jatekosok;
	
	/** Aktuális tét */
	protected double tet;
	
	/** Aktuális kör sorszáma */
	protected int kor;
	
	/** Célérték */
	protected double goal;
	
	
	/** Az asztalnál ülő Játékosok száma */
	protected int j_db;
	
	
	public Asztal()
	{
		jatekosok = new Jatekos[10];
		ujJatek();
	}
	
	/**
	 * Új játék indítása
	 * <p>
	 * Kezdőértékek beállítása
	 */
	public void ujJatek() {}
	
	/**
	 * Játékos asztaljoz ültetése
	 * @param j  Az új játékos
	 */
	public void addJatekos(Jatekos j) 
	{
		if (j_db >= 10)
			System.out.println("Nem fér ide több játékos");
		else 
		{
			j.setAsztal(this);
			jatekosok[j_db++] = j;
		}
	}
	
	/**
	 * @return  Aktuális kör száma
	 */
	public int getKor() { return kor; }
	
	/**
	 * Tét emelése egy értékkel
	 * @param d  Az emelés értéke
	 */
	public void emel(double d) 
	{ 
		tet += d; 
		//System.out.println("Emelés: " + d);
	}
	
	/**
	 * Asztalnál ülő játékosok lépése
	 * @throws NincsJatekos  Üres asztal esetén nem lehet kör
	 */
	public void kor() throws NincsJatekos {
		
		if (j_db == 0) 
			throw new NincsJatekos("Nem ülnek az asztalnál.");
		else
		{
			if (tet > goal) { 
				System.out.println("Vége a játéknak.");
			}
			else 
			{
				kor++;
				for (int i = 0; i < j_db; i++) 
				{
					jatekosok[i].lep();
					if (tet > goal) 
					{
						if (tet < 1.1*goal) 
						{
							System.out.println("A nyertes: " + i);
							break;
						}
					}
				}
				System.out.println("Aktuális tét: " + tet);
			}
		}
		System.out.println("----");
		System.out.println();
	}
	
	public double getTet() 
	{
		return tet; 
	}
}
